#!/usr/bin/env bash

# get options
P=$(sed -e 's#.*\-p=\([^\-]*\).*#\1#' <<< "$1$2")
C=$(sed -e 's#.*\-c=\([^\-]*\).*#\1#' <<< "$1$2")

## p
if [ ! "$P" == "$1$2" ]; then
    WEB_PORT=$P
fi

## c for create database
# update dockerlocal & add port if applicable
./install-git-submodules
cd ../DockerLocal
if [ ! "$WEB_PORT" == "" ]; then
    echo "${WEB_PORT}" > port
fi
cd commands

# start up containers
if [ ! "$C" == "$1$2" ]; then
    ./site-up -c=$C
else
    ./site-up
fi

# run installer, create app (happens as root)
./site-ssh -h=web -c="cd /var/www/site/commands && . ./install-laravel-installer"
./site-ssh -h=web -c="cd /var/www/site/ && laravel new app"
./site-ssh -h=web -c='chmod 777 /var/www/site/app/storage -R'
./site-ssh -h=web -c='chmod 777 /var/www/site/app/bootstrap -R'

# get back to repo root and change app folder ownership
cd ../../ && sudo chown $(whoami):$(whoami) app/ -R

# nginx.site.conf
cd DockerLocal && sed -i'.bak' "s/\/html/\/app\/public/g;" nginx.site.conf
rm -f "${FILE}.bak"
cd commands

# refresh nginx.site.conf
./site-up

# (in DockerLocal/commands)

# set back to quick-laravel-guide/commands
cd ../../commands

# set .env up with db entries
./show-db-envvars